// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(MangaProjectDbContext))]
    [Migration("20220809174424_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Manga.Manga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AgeRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeRatingGuide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AverageRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CanonicalTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FavoritesCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PopularityRank")
                        .HasColumnType("int");

                    b.Property<string>("PosterImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RatingFrequenciesId")
                        .HasColumnType("int");

                    b.Property<int?>("RatingRank")
                        .HasColumnType("int");

                    b.Property<string>("Serialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TitlesId")
                        .HasColumnType("int");

                    b.Property<int?>("UserCount")
                        .HasColumnType("int");

                    b.Property<int?>("VolumeCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RatingFrequenciesId");

                    b.HasIndex("TitlesId");

                    b.ToTable("MANGAS", (string)null);
                });

            modelBuilder.Entity("Entities.Manga.MangaTitles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("En_jp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("En_us")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ja_jp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MangaTitles", (string)null);
                });

            modelBuilder.Entity("Entities.Manga.RatingFrequencies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MangasRatingFrequencies", (string)null);
                });

            modelBuilder.Entity("Entities.Manga.Manga", b =>
                {
                    b.HasOne("Entities.Manga.RatingFrequencies", "RatingFrequencies")
                        .WithMany()
                        .HasForeignKey("RatingFrequenciesId");

                    b.HasOne("Entities.Manga.MangaTitles", "Titles")
                        .WithMany()
                        .HasForeignKey("TitlesId");

                    b.Navigation("RatingFrequencies");

                    b.Navigation("Titles");
                });
#pragma warning restore 612, 618
        }
    }
}
