@model MvcPresentationLayer.Models.MangaModels.MangaItemModalViewModel
@using Entities.Enums

@{

    ViewData["Title"] = @Model.Manga.CanonicalTitle;
    string Img = @Model.Manga.CoverImageLink;
    if (Model.Manga.CoverImageLink == null)
    {
        //width = "25";
        //height = 400;
        Img = Model.Manga.PosterImageLink;
    }
    string Synopsys = @Model.Manga.Synopsis;

}



<div class="mop-banner" style="background-image: url('@Model.Manga.CoverImageLink')">
</div>

<div class="mop-header">
    <div class="mop-container">
        <div class="cover-wrap overlap-banner">
            <div class="cover-wrap-inner">
                <img class="mop-poster" src="@Model.Manga.PosterImageLink" />
                <div class="mop-actions">
                    <div class="mop-list">
                        <!-- Trigger/Open The Modal -->
                        <div class="addList" id="addList">Add to List</div>
                        <div class="dropdown el-dropdown">
                            <span class="el-dropdown-link el-dropdown-selfdefine"
                             <i class="uil uil-angle-down"></i>
                        </div>
                    </div>
                    <div class="mop-favourite">
                        <i class="uil uil-heart-alt"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="mop-content">
            <h1>@Model.Manga.CanonicalTitle</h1>

            @if (Synopsys.Length > 700)
            {
                <p class="mop-description">
                    @Synopsys.Substring(0, 700)...
                </p>
                <p class="mop-full-description">
                    @Synopsys;
                </p>
            }
            else
            {
                <p class="mop-description">
                    @Synopsys.ToString();
                </p>
            }
            @if (@Synopsys.Length > 700)
            {
                <span class="mop-read-more">Read More</span>
                <span class="mop-read-less">Read Less</span>

            }
        </div>
    </div>
</div>

<!-- Page Content -->



<div class="form-group">
    <div class="card-item">
        <p class="manga-info"><a class="manga-info-a">Format:</a> @Model.Manga.Subtype</p>
        <p class="manga-info"><a class="manga-info-a">Chapters:</a> @Model.Manga.ChapterCount</p>
        <p class="manga-info"><a class="manga-info-a">Volumes:</a> @Model.Manga.VolumeCount</p>
        <p class="manga-info"><a class="manga-info-a">Status:</a> @Model.Manga.Status.ToString()</p>
        <p class="manga-info"><a class="manga-info-a">Start Date:</a> @Model.Manga.StartDate</p>
        <p class="manga-info"><a class="manga-info-a"> Date:</a> @Model.Manga.EndDate</p>
        <p class="manga-info"><a class="manga-info-a">Average Score:</a> @Model.Manga.AverageRating</p>
        <p class="manga-info"><a class="manga-info-a">Popularity:</a> @Model.Manga.PopularityRank</p>
        <p class="manga-info"><a class="manga-info-a">Favorites:</a> @Model.Manga.FavoritesCount</p>
        <p>
            Genres:
            <ul>
                @{
                    foreach (var item in @Model.Manga.Genres)
                    {
                        <li>
                            <p>@item.Name</p>
                        </li>
                    }
                }
            </ul>
        </p>

    </div>
</div>


<!-- The Modal -->
<div id="modalAdd" class="modalAdd">
    <!-- Modal content -->
    <div class="modalAdd-Content">
        <span class="close">&times;</span>
        <form method="post" action="/Manga/UserFavorite/">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="@Model.User.Status" class="control-label"></label>
                @{
                    string[] valores = Enum.GetNames<UserMangaStatus>();
                }
                <select class="form-control" name="Status">
                    @for (int i = 0; i < valores.Length; i++)
                    {
                        <option value="@i">@valores[i].Replace("_"," ")</option>
                    }
                </select>
                <span asp-validation-for="@Model.User.Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.User.StartDate" class="control-label"></label>
                <input asp-for="@Model.User.StartDate" class="form-control" />
                <span asp-validation-for="@Model.User.StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.User.FinishDate" class="control-label"></label>
                <input asp-for="@Model.User.FinishDate" class="form-control" />
                <span asp-validation-for="@Model.User.FinishDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.User.Score" class="control-label"></label>
                @{
                    string[] valoresScore = Enum.GetNames<MangaScore>();
                }
                <select class="form-control" name="Score">
                    @for (int i = 0; i < valoresScore.Length; i++)
                    {
                        <option value="@i">@valoresScore[i].Replace("_"," ")</option>
                    }
                </select>
                <span asp-validation-for="@Model.User.Score" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.User.TotalRereads" class="control-label"></label>
                <input asp-for="@Model.User.TotalRereads" class="form-control" />
                <span asp-validation-for="@Model.User.TotalRereads" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.User.Chapter" class="control-label"></label>
                <input asp-for="@Model.User.Chapter" class="form-control" />
                <span asp-validation-for="@Model.User.Chapter" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.User.Volume" class="control-label"></label>
                <input asp-for="@Model.User.Volume" class="form-control" />
                <span asp-validation-for="@Model.User.Volume" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.User.PrivateNotes" class="control-label"></label>
                <input asp-for="@Model.User.PrivateNotes" class="form-control" />
                <span asp-validation-for="@Model.User.PrivateNotes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.User.PublicNotes" class="control-label"></label>
                <input asp-for="@Model.User.PublicNotes" class="form-control" />
                <span asp-validation-for="@Model.User.PublicNotes" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="@Model.User.Private" /> @Html.DisplayNameFor(model => model.User.Private)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="@Model.User.Favorite" /> @Html.DisplayNameFor(model => model.User.Favorite)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Favorite" class="btn btn-primary" />
            </div>
        </form>

    </div>
</div>


<script>

    var modal = document.getElementById("modalAdd");
    var btn = document.getElementById("addList");
    var span = document.getElementsByClassName("close")[0];

    btn.onclick = function () {
        modal.style.display = "flex";
    }

    span.onclick = function () {
        modal.style.display = "none";
    }

    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    let description = document.querySelector('.mop-description')
    let full = document.querySelector('.mop-full-description')
    let more = document.querySelector('.mop-read-more')
    let less = document.querySelector('.mop-read-less')

    more.onclick = function () {
        description.classList.toggle('active')
        full.classList.toggle('active')
        less.classList.toggle('active')
        more.classList.toggle('active')
    }

    less.onclick = function () {
        description.classList.toggle('active')
        full.classList.toggle('active')
        more.classList.toggle('active')
        less.classList.toggle('active')
    }



</script>